{"version":3,"sources":["eo.js"],"names":[],"mappings":";;;;;;;;AAAA;AACO,IAAM,8BAAW,SAAX,QAAW,CAAC,GAAD,EAAoB;AAAA,oCAAX,MAAW;AAAX,UAAW;AAAA;;AAC1C,MAAI,OAAO,MAAP,GAAgB,CAApB,EAAuB;AACrB,QAAI,QAAQ,OAAO,GAAP,CAAZ,EAAyB,OAAO,KAAP;AACzB,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,OAAO,MAA3B,EAAmC,GAAnC,EAAwC;AACtC,UAAI,GAAG,GAAH,EAAQ,OAAO,CAAP,CAAR,CAAJ,EAAwB,OAAO,KAAP;AACzB;AACD,WAAO,IAAP;AACD,GAND,MAMO;AACL,WAAO,QAAQ,OAAO,GAAP,CAAf;AACD;AACF,CAVM;;AAYP;AACO,IAAM,kBAAK,SAAL,EAAK,CAAC,GAAD,EAAM,IAAN,EAAe;AAC/B,MAAI,CAAC,IAAD,IAAS,CAAC,GAAd,EAAmB,MAAM,iCAAN;AACnB,SAAO,KAAK,CAAL,EAAQ,WAAR,KAAwB,KAAK,KAAL,CAAW,CAAX,EAAc,WAAd,EAA/B;AACA,MAAM,UAAU,CACd,QADc,EAEd,OAFc,EAGd,UAHc,EAId,MAJc,EAKd,QALc,EAMd,QANc,EAOd,QAPc,EAQd,SARc,EASd,OATc,EAUd,MAVc,EAWd,MAXc,EAYd,WAZc,CAAhB;AAcA,MAAI,CAAC,QAAQ,QAAR,CAAiB,IAAjB,CAAL,EACE,2BAAyB,IAAzB,yDAAiF,OAAjF;AACF,SAAO,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,mBAAmD,IAAnD,MAAP;AACD,CApBM;;AAsBP;AACO,IAAM,wBAAQ,SAAR,KAAQ,MAAO;AAC1B,MAAI,CAAC,GAAL,EAAU,MAAM,gCAAN;AACV,UAAQ,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,GAA/B,CAAR;AACE,SAAK,iBAAL;AACE,aAAO,OAAO,MAAP,CAAc,EAAd,EAAkB,GAAlB,CAAP;AACF,SAAK,gBAAL;AACE,0CAAW,GAAX;AACF,SAAK,eAAL;AACE,aAAO,IAAI,IAAJ,CAAS,IAAI,OAAJ,EAAT,CAAP;AACF;AACE,aAAO,GAAP;AARJ;AAUD,CAZM;;AAcP;AACO,IAAM,gCAAY,SAAZ,SAAY,MAAO;AAC9B,MAAI,CAAC,GAAL,EAAU,MAAM,oCAAN;AACV,MAAI,SAAS,MAAM,GAAN,CAAb;AACA,UAAQ,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,MAA/B,CAAR;AACE,SAAK,iBAAL;AACE,WAAK,IAAM,IAAX,IAAmB,MAAnB,EAA2B;AACzB,YACE,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAAO,IAAP,CAA/B,MAAiD,iBAAjD,IACA,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,OAAO,IAAP,CAA/B,MAAiD,gBAFnD,EAGE;AACA,iBAAO,IAAP,IAAe,UAAU,OAAO,IAAP,CAAV,CAAf;AACD;AACF;AACD,aAAO,MAAP;AACF,SAAK,gBAAL;AACE,aAAO,OAAP,CAAe,UAAC,EAAD,EAAK,EAAL,EAAY;AACzB,YACE,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,EAA/B,MAAuC,iBAAvC,IACA,OAAO,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,EAA/B,MAAuC,gBAFzC,EAGE;AACA,iBAAO,EAAP,IAAa,UAAU,EAAV,CAAb;AACD;AACF,OAPD;AAQA,aAAO,MAAP;AACF;AACE,aAAO,MAAP;AAtBJ;AAwBD,CA3BM;;AA6BP;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAM,MAAM;AACV,YAAU,2BAAS,GAAT,4BAAiB,MAAjB,GADA;AAEV,MAAI,GAAG,GAAH,EAAQ,IAAR,CAFM;AAGV,SAAO,MAAM,GAAN,CAHG;AAIV,aAAW,UAAU,GAAV;AAJD,CAAZ;;kBAOe,G","file":"eo-babelled.js","sourcesContent":["// Sprawdza czy wartoć jest obiektem, jeli jest wypluwa true. Drugi argument pozwala wykluczyć wybrane obiekty.\r\nexport const isObject = (val, ...config) => {\r\n  if (config.length > 0) {\r\n    if (val !== Object(val)) return false;\r\n    for (let i = 0; i < config.length; i++) {\r\n      if (is(val, config[i])) return false;\r\n    }\r\n    return true;\r\n  } else {\r\n    return val === Object(val);\r\n  }\r\n};\r\n\r\n//Sprawdza czy wartosc podana jako pierwszy argument jest typu podanego w drugim argumencie.\r\nexport const is = (val, type) => {\r\n  if (!type || !val) throw 'No arg passed to \"is\" function.';\r\n  type = type[0].toUpperCase() + type.slice(1).toLowerCase();\r\n  const optList = [\r\n    'Object',\r\n    'Array',\r\n    'Function',\r\n    'Date',\r\n    'RegExp',\r\n    'String',\r\n    'Number',\r\n    'Boolean',\r\n    'Error',\r\n    'Math',\r\n    'JSON',\r\n    'Arguments'\r\n  ];\r\n  if (!optList.includes(type))\r\n    throw `Wrong argument \"${type}\" passed to \"is\" function. Available arguments: \"${optList}\"`;\r\n  return Object.prototype.toString.call(val) === `[object ${type}]`;\r\n};\r\n\r\n// Zwraca nową instancję zmiennej przesłanej jako argument.\r\nexport const clone = val => {\r\n  if (!val) throw 'No arg passed to \"clone\" func.';\r\n  switch (Object.prototype.toString.call(val)) {\r\n    case '[object Object]':\r\n      return Object.assign({}, val);\r\n    case '[object Array]':\r\n      return [...val];\r\n    case '[object Date]':\r\n      return new Date(val.valueOf());\r\n    default:\r\n      return val;\r\n  }\r\n};\r\n\r\n// Wykonuje głębokie klonowanie zmiennej przesłanej jako argument.\r\nexport const cloneDeep = val => {\r\n  if (!val) throw 'No arg passed to \"cloneDeep\" func.';\r\n  let newVal = clone(val);\r\n  switch (Object.prototype.toString.call(newVal)) {\r\n    case '[object Object]':\r\n      for (const prop in newVal) {\r\n        if (\r\n          Object.prototype.toString.call(newVal[prop]) === '[object Object]' ||\r\n          Object.prototype.toString.call(newVal[prop]) === '[object Array]'\r\n        ) {\r\n          newVal[prop] = cloneDeep(newVal[prop]);\r\n        }\r\n      }\r\n      return newVal;\r\n    case '[object Array]':\r\n      newVal.forEach((el, id) => {\r\n        if (\r\n          Object.prototype.toString.call(el) === '[object Object]' ||\r\n          Object.prototype.toString.call(el) === '[object Array]'\r\n        ) {\r\n          newVal[id] = cloneDeep(el);\r\n        }\r\n      });\r\n      return newVal;\r\n    default:\r\n      return newVal;\r\n  }\r\n};\r\n\r\n/* export const isObjectPropertiesEqual = (\r\n  object1,\r\n  object2,\r\n  property = '_ALL'\r\n) => {\r\n  switch (property) {\r\n    case '_ALL':\r\n      return true;\r\n    case typeof property === 'array':\r\n      return true;\r\n    default:\r\n      return true;\r\n  }\r\n};\r\n\r\nexport const findAndChange = (arr, find, changeTo) => {\r\n  const newArr = arr.map(el => {\r\n    let newEl;\r\n    isObject(el) ? (newEl = Object.assign({}, el)) : (newEl = el);\r\n  });\r\n};\r\n */\r\nconst lib = {\r\n  isObject: isObject(val, ...config),\r\n  is: is(val, type),\r\n  clone: clone(val),\r\n  cloneDeep: cloneDeep(val)\r\n};\r\n\r\nexport default lib;\r\n"]}